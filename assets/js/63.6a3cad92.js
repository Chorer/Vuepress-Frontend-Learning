(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{602:function(v,_,l){"use strict";l.r(_);var e=l(12),s=Object(e.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("h2",{attrs:{id:"构建工具的发展方向"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#构建工具的发展方向"}},[v._v("#")]),v._v(" 构建工具的发展方向")]),v._v(" "),l("p",[v._v("构建工具有两个发展方向，一个是传统的 bundle 类构建工具，需要经历打包过程；一个是近年流行的 bundleless/no-bundle 类构建工具，无需进行打包。那么为什么以前需要打包，现在不需要打包呢？")]),v._v(" "),l("blockquote",[l("p",[v._v("为什么过去需要打包？")])]),v._v(" "),l("ul",[l("li",[v._v("HTTP/1.1 各浏览器有并行连接限制")]),v._v(" "),l("li",[v._v("浏览器不支持模块系统（如 CommonJS 包不能直接在浏览器运行）")]),v._v(" "),l("li",[v._v("代码依赖关系与顺序管理")])]),v._v(" "),l("blockquote",[l("p",[v._v("为什么现在不需要打包？")])]),v._v(" "),l("p",[v._v("近几年时间，标准的确立、浏览器大厂和前端生态的跟进，使得「不打包」成为可能：")]),v._v(" "),l("ul",[l("li",[v._v("HTTP/2.0 多路并用")]),v._v(" "),l("li",[v._v("各大浏览器逐一支持 ESM")]),v._v(" "),l("li",[v._v("越来越多的 npm 包拥抱 ESM（尽管很多包的依赖并不是）")])]),v._v(" "),l("h2",{attrs:{id:"bundle-类构建工具"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#bundle-类构建工具"}},[v._v("#")]),v._v(" bundle 类构建工具")]),v._v(" "),l("p",[l("strong",[v._v("1）grunt 和 gulp：")])]),v._v(" "),l("p",[v._v("grunt 和 gulp 比较像，它们都是基于任务的构建工具，就像进行流水线作业的自动化机器一样，避免让我们手动、重复地完成一些工作。当然两者也有区别，grunt 是配置驱动的，上手难度高，而且每次操作产生的中间态文件都会伴随着一次磁盘读写，性能不好；gulp 则是代码驱动的，每次操作产生的中间态文件会放在内存中，传递给下一次操作")]),v._v(" "),l("p",[l("strong",[v._v("2）Browserify：")])]),v._v(" "),l("p",[v._v("browserify 是基于 Modules/1.x 规范的模块处理工具，致力于在浏览器端使用 CommonJS 模块")]),v._v(" "),l("p",[l("strong",[v._v("3）Fis3：")])]),v._v(" "),l("p",[v._v("百度出品的构建工具，在基本的功能之上还集成了类似图片合并、资源压缩等 web 开发中所需的构建功能，而且配置简单、开箱即用，但缺点是目前不再维护")]),v._v(" "),l("p",[l("strong",[v._v("4）Webpack：")])]),v._v(" "),l("p",[v._v("相比前面的工具来说，Webpack 更加面向工程化，是一款全能且主流的打包构建工具，但缺点是配置复杂、构建速度慢。针对配置复杂的问题，很多前端框架都有对应的脚手架，实现了 0 配置和开箱即用。")]),v._v(" "),l("p",[l("strong",[v._v("5）Rollup：")])]),v._v(" "),l("p",[v._v("Rollup 专注于纯 JS 和 ES Module 的处理，提出了 tree-shaking 和 scope-hoisting。")]),v._v(" "),l("p",[l("strong",[v._v("6）Parcel：")])]),v._v(" "),l("p",[v._v("Parcel 最大的特点在于极速、零配置。它采用了多核编译+文件缓存，构建速度极快；此外，很多功能都内置了，因此无需额外进行配置。缺点是生态不够丰富，0 配置虽方便但很难实现定制化")]),v._v(" "),l("p",[l("strong",[v._v("7）ESbuild：")])]),v._v(" "),l("p",[v._v("ESbuild 是一款速度极快的构建工具，也提供了编译和压缩等功能。而它之所以这么快，主要是因为：")]),v._v(" "),l("ol",[l("li",[v._v("使用 golang 编写，天然并行；")]),v._v(" "),l("li",[v._v("内部算法非常精细；")]),v._v(" "),l("li",[v._v("没有任何第三方依赖")])]),v._v(" "),l("h2",{attrs:{id:"bundlelsss-类构建工具"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#bundlelsss-类构建工具"}},[v._v("#")]),v._v(" bundlelsss 类构建工具")]),v._v(" "),l("blockquote",[l("p",[v._v("bundle 类构建工具的痛点：")])]),v._v(" "),l("p",[v._v("这类工具的核心都是从入口文件出发，递归循环地分析依赖，构建依赖图，最终把所有依赖的模块打包到一个 js bundle 中，再注入到 HTML。")]),v._v(" "),l("ul",[l("li",[v._v("启动速度：因为需要进行依赖分析和打包，所以启动速度慢")]),v._v(" "),l("li",[v._v("构建时间：项目体积越大，打包的东西就越多，构建耗时越长")]),v._v(" "),l("li",[v._v("文件更新（HMR）：但凡有一个模块发生了改动，都需要对它的相关依赖重新进行编译构建、重新递归地构建依赖图（虽然 webpack5 实现了增量构建），这是非常耗时的")]),v._v(" "),l("li",[v._v("生态：无敌")])]),v._v(" "),l("blockquote",[l("p",[v._v("bundleless 类构建工具是怎么做的：")])]),v._v(" "),l("p",[v._v("这类工具的核心是跳过打包这个过程，直接基于浏览器原生的 ES Module。在解析遇到导入语句的时候，会向 devServer 发起请求，devServer 对资源进行实时编译并将结果返回给浏览器。")]),v._v(" "),l("ul",[l("li",[v._v("启动速度：只需要启动 devServer，其它的东西按需加载、实时编译即可。速度飞快")]),v._v(" "),l("li",[v._v("构建时间：不会随着项目体积增大而拖慢构建时间")]),v._v(" "),l("li",[v._v("文件更新（HMR）：每次模块发生改动的时候，可以只针对该模块进行增量构建")]),v._v(" "),l("li",[v._v("生态：目前仍然不足以取代 Webpack，但是未来的趋势")])]),v._v(" "),l("p",[v._v("用一张图直观总结就是：")]),v._v(" "),l("p",[l("img",{attrs:{src:"https://pic1.zhimg.com/80/v2-7b1d9d51b822e926a6541bb0ec2a4044_720w.jpg",alt:""}})]),v._v(" "),l("blockquote",[l("p",[v._v("那么 bundleless 类构建工具有哪些？")])]),v._v(" "),l("p",[v._v("bundlelss 类构建工具的典型是 Snowpack 和 Vite。")]),v._v(" "),l("p",[v._v("以 Vite 为例，它内置了 ESbuild 和 Rollup。Vite 使用 ESbuild 进行实时编译，指的是将 "),l("code",[v._v(".ts")]),v._v("、"),l("code",[v._v(".less")]),v._v(" 等文件编译为浏览器可以解析的形式；此外，由于 Rollup 在打包上面更加成熟和灵活，所以 Vite 选择使用 Rollup 而不是 ESbuild 进行生产环境的打包。")])])}),[],!1,null,null,null);_.default=s.exports}}]);