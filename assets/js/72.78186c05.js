(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{611:function(t,a,e){"use strict";e.r(a);var r=e(12),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"持久化缓存与增量编译"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持久化缓存与增量编译"}},[t._v("#")]),t._v(" 持久化缓存与增量编译")]),t._v(" "),e("p",[t._v("持久化缓存指的是将首次编译的结果缓存下来，用于下一次编译中，从而提高构建性能。Webpack4 没有内置的持久化缓存功能，通常都是通过 cache-loader 实现的。Webpack5 原生实现了持久化缓存功能，每次文件修改的时候可以做到只重新编译修改了的模块，实现增量编译。")]),t._v(" "),e("h2",{attrs:{id:"增强的-tree-shaking"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增强的-tree-shaking"}},[t._v("#")]),t._v(" 增强的 tree-shaking")]),t._v(" "),e("ul",[e("li",[t._v("跟踪嵌套模块的导出。A 导出了 a、b，B 导入了 a、b 再把他们导出，C 导入了 a、b，只使用了 a，那么 b 最终会被消除掉")]),t._v(" "),e("li",[t._v("支持对 CommonJS 模块的静态分析。A 通过 module.export 导出了 a、b、c，B 只 require 了 a，那么 b、c 最终会被消除掉")])])])}),[],!1,null,null,null);a.default=s.exports}}]);