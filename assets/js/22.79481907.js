(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{560:function(t,v,_){"use strict";_.r(v);var a=_(12),s=Object(a.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("CSS 引入伪元素和伪类的概念是为了格式化文档树以外的信息。也就是说，伪元素和伪类是用来修饰不在文档树中的部分，比如，一句话中的第一个字母，或者是列表中的第一个元素。")]),t._v(" "),_("h2",{attrs:{id:"伪元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪元素"}},[t._v("#")]),t._v(" 伪元素")]),t._v(" "),_("h3",{attrs:{id:"作用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),_("blockquote",[_("p",[t._v("伪元素用于创建一些不在文档树中的元素，并为其添加样式。")])]),t._v(" "),_("p",[t._v("例如，我们可以通过 "),_("code",[t._v(":before")]),t._v(" 来在一个元素前增加一些文本，并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本实际上不在文档树中。")]),t._v(" "),_("h3",{attrs:{id:"伪元素列举"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪元素列举"}},[t._v("#")]),t._v(" 伪元素列举")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/CSS%20%E5%9F%BA%E7%A1%80%E7%B3%BB%E5%88%97%EF%BC%9A%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0-2.png",alt:""}})]),t._v(" "),_("h4",{attrs:{id:"_1-单冒号和双冒号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-单冒号和双冒号"}},[t._v("#")]),t._v(" 1）单冒号和双冒号")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选择器")]),t._v(" "),_("th",[t._v("示例")]),t._v(" "),_("th",[t._v("示例说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("::before/:before")]),t._v(" "),_("td",[t._v("在被选元素前插入内容")]),t._v(" "),_("td",[t._v("需要使用 content 属性来指定要插入的内容。被插入的内容实际上不在文档树中。")])]),t._v(" "),_("tr",[_("td",[t._v("::after/:after")]),t._v(" "),_("td",[t._v("在被选元素后插入内容")]),t._v(" "),_("td",[t._v("用法同上")])]),t._v(" "),_("tr",[_("td",[t._v("::first-letter/:first-letter")]),t._v(" "),_("td",[t._v("匹配元素中文本的首字母")]),t._v(" "),_("td",[t._v("被修饰的字母不在首字母中")])]),t._v(" "),_("tr",[_("td",[t._v("::first-line/:first-line")]),t._v(" "),_("td",[t._v("匹配元素中第一行的文本")]),t._v(" "),_("td",[t._v("这个伪元素只能用在块元素中，不能用在内联元素中")])])])]),t._v(" "),_("h4",{attrs:{id:"_2-仅双冒号"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-仅双冒号"}},[t._v("#")]),t._v(" 2）仅双冒号")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选择器")]),t._v(" "),_("th",[t._v("示例")]),t._v(" "),_("th",[t._v("示例说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("::selection")]),t._v(" "),_("td",[t._v("匹配被用户选中或者处于高亮状态的部分")]),t._v(" "),_("td",[t._v("在FF浏览器使用时需要添加 -moz 前缀")])]),t._v(" "),_("tr",[_("td",[t._v("::placeholder")]),t._v(" "),_("td",[t._v("匹配占位符的文本")]),t._v(" "),_("td",[t._v("只有元素设置placeholder 属性时，该伪元素才能生效。该伪元素不是 CSS 的标准，它的实现可能在将来会有所改变，所以要决定使用时必须谨慎。在一些浏览器中（IE10 和 Firefox18 及其以下版本）会使用单冒号的形式")])]),t._v(" "),_("tr",[_("td",[t._v("::backdrop")]),t._v(" "),_("td",[t._v("用于改变全屏模式下的背景颜色")]),t._v(" "),_("td",[t._v("全屏模式的默认颜色为黑色。(试验阶段)")])])])]),t._v(" "),_("h2",{attrs:{id:"伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪类"}},[t._v("#")]),t._v(" 伪类")]),t._v(" "),_("h3",{attrs:{id:"作用-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#作用-2"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),_("blockquote",[_("p",[t._v("伪类用于当已有元素处于某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的。")])]),t._v(" "),_("p",[t._v("例如，当用户悬停在指定的元素时，我们可以通过 "),_("code",[t._v(":hover")]),t._v(" 来描述这个元素的状态。虽然它和普通的 CSS 类相似，可以为已有的元素添加样式，但是它只有处于 DOM 树无法描述的状态下才能为元素添加样式，所以将其称为伪类。")]),t._v(" "),_("h3",{attrs:{id:"伪类列举"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#伪类列举"}},[t._v("#")]),t._v(" 伪类列举")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/CSS%20%E5%9F%BA%E7%A1%80%E7%B3%BB%E5%88%97%EF%BC%9A%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0/%E4%BC%AA%E7%B1%BB%E5%92%8C%E4%BC%AA%E5%85%83%E7%B4%A0-1.png",alt:""}})]),t._v(" "),_("h4",{attrs:{id:"_1-状态伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-状态伪类"}},[t._v("#")]),t._v(" 1）状态伪类")]),t._v(" "),_("p",[t._v("状态伪类是基于元素当前状态进行选择的。在与用户的交互过程中元素的状态是动态变化的，因此该元素会根据其状态呈现不同的样式。当元素处于某状态时会呈现该样式，而进入另一状态后，该样式就会失去。状态伪类的顺序很重要，顺序错误可能会导致没有效果。通常的建议是 "),_("strong",[t._v("LVFHA")]),t._v("，即 _ "),_("code",[t._v("link")]),t._v("，"),_("code",[t._v("visited")]),t._v("，"),_("code",[t._v("focus")]),t._v("，"),_("code",[t._v("hover")]),t._v("，"),_("code",[t._v("active")]),t._v("。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选择器")]),t._v(" "),_("th",[t._v("示例")]),t._v(" "),_("th",[t._v("示例说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v(":link")]),t._v(" "),_("td",[t._v("a:link")]),t._v(" "),_("td",[t._v("选择所有未访问的链接")])]),t._v(" "),_("tr",[_("td",[t._v(":visited")]),t._v(" "),_("td",[t._v("a:visited")]),t._v(" "),_("td",[t._v("选择所有访问过的链接")])]),t._v(" "),_("tr",[_("td",[t._v(":hover")]),t._v(" "),_("td",[t._v("a:hover")]),t._v(" "),_("td",[t._v("选择鼠标悬空的链接")])]),t._v(" "),_("tr",[_("td",[t._v(":active")]),t._v(" "),_("td",[t._v("a:active")]),t._v(" "),_("td",[t._v("选择正在活动的链接")])]),t._v(" "),_("tr",[_("td",[t._v(":focus")]),t._v(" "),_("td",[t._v("input:focus")]),t._v(" "),_("td",[t._v("选择获得焦点的输入框")])])])]),t._v(" "),_("h4",{attrs:{id:"_2-结构化伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-结构化伪类"}},[t._v("#")]),t._v(" 2）结构化伪类")]),t._v(" "),_("p",[t._v("结构化伪类是 CSS3 新增选择器，利用 DOM 树进行元素过滤，通过文档结构的互相关系来匹配元素，能够减少 class 和 id 属性的定义，使文档结构更简洁。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选择器")]),t._v(" "),_("th",[t._v("示例")]),t._v(" "),_("th",[t._v("示例说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v(":first-child")]),t._v(" "),_("td",[t._v("p:first-child")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的第一个子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":first-of-type")]),t._v(" "),_("td",[t._v("p:first-of-type")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的第一个p子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":last-child")]),t._v(" "),_("td",[t._v("p:last-child")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的最后一个子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":last-of-type")]),t._v(" "),_("td",[t._v("p:last-of-type")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的最后一个p子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":not(selector)")]),t._v(" "),_("td",[t._v(":not(p)")]),t._v(" "),_("td",[t._v("选择所有p以外的元素")])]),t._v(" "),_("tr",[_("td",[t._v(":nth-child(n)")]),t._v(" "),_("td",[t._v("p:nth-child(2)")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的第2个子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":nth-last-child(n)")]),t._v(" "),_("td",[t._v("p:nth-last-child(2)")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的倒数第2个子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":nth-last-of-type(n)")]),t._v(" "),_("td",[t._v("p:nth-last-of-type(2)")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的倒数第2个p子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":nth-of-type(n)")]),t._v(" "),_("td",[t._v("p:nth-of-type(2)")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素必须是其父元素的第2个p子元素")])]),t._v(" "),_("tr",[_("td",[t._v(":only-of-type")]),t._v(" "),_("td",[t._v("p:only-of-type")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素的父元素可以有多个子元素，但是类型为p的子元素只有一个")])]),t._v(" "),_("tr",[_("td",[t._v(":only-child")]),t._v(" "),_("td",[t._v("p:only-child")]),t._v(" "),_("td",[t._v("选择符合的p元素，该p元素的父元素只有一个子元素，就是该p元素")])]),t._v(" "),_("tr",[_("td",[t._v(":target")]),t._v(" "),_("td",[t._v("#news:target")]),t._v(" "),_("td",[t._v("选择当前活动#news元素(点击URL包含锚的名字)")])])])]),t._v(" "),_("h4",{attrs:{id:"_3-表单相关伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-表单相关伪类"}},[t._v("#")]),t._v(" 3）表单相关伪类")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选择器")]),t._v(" "),_("th",[t._v("示例")]),t._v(" "),_("th",[t._v("示例说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v(":disabled")]),t._v(" "),_("td",[t._v("input:disabled")]),t._v(" "),_("td",[t._v("选择所有禁用的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":enabled")]),t._v(" "),_("td",[t._v("input:enabled")]),t._v(" "),_("td",[t._v("选择没有设置disabled属性的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":in-range")]),t._v(" "),_("td",[t._v("input:in-range")]),t._v(" "),_("td",[t._v("选择在指定区域内的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":out-of-range")]),t._v(" "),_("td",[t._v("input:out-of-range")]),t._v(" "),_("td",[t._v("选择不在指定区域内的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":valid")]),t._v(" "),_("td",[t._v("input:valid")]),t._v(" "),_("td",[t._v("选择条件验证正确的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":invalid")]),t._v(" "),_("td",[t._v("input:invalid")]),t._v(" "),_("td",[t._v("选择条件验证错误的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":required")]),t._v(" "),_("td",[t._v("input:required")]),t._v(" "),_("td",[t._v("选择设置required属性的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":optional")]),t._v(" "),_("td",[t._v("input:optional")]),t._v(" "),_("td",[t._v("选择没有required属性，即设置 optional属性的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":read-only")]),t._v(" "),_("td",[t._v("input:read-only")]),t._v(" "),_("td",[t._v("选择设置只读属性的表单元素")])]),t._v(" "),_("tr",[_("td",[t._v(":read-write")]),t._v(" "),_("td",[t._v("input:read-write")]),t._v(" "),_("td",[t._v("选择处于编辑状态的元素；input，textarea 和设置 contenteditable 的 HTML 元素获取焦点时即处于编辑状态")])]),t._v(" "),_("tr",[_("td",[t._v(":checked")]),t._v(" "),_("td",[t._v("input:checked")]),t._v(" "),_("td",[t._v("匹配勾选的input元素，input元素包括 radio 和 checkbox")])]),t._v(" "),_("tr",[_("td",[t._v(":empty")]),t._v(" "),_("td",[t._v("p:empty")]),t._v(" "),_("td",[t._v("匹配所有没有子元素的 p 元素")])]),t._v(" "),_("tr",[_("td",[t._v(":default")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("匹配默认选中的元素(提交按钮总是表单的默认按钮)")])]),t._v(" "),_("tr",[_("td",[t._v(":indeterminate")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("当某组中的单选框或复选框还没有选取状态时，:indeterminate 匹配该组中所有的单选框或复选框。")])]),t._v(" "),_("tr",[_("td",[t._v(":scope")]),t._v(" "),_("td"),t._v(" "),_("td",[t._v("匹配处于 style 作用域下的元素。当 style 没有设置 scope 属性时，style 内的样式会对整个 html 起作用。(试验阶段)")])])])]),t._v(" "),_("h4",{attrs:{id:"_4-语言相关伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-语言相关伪类"}},[t._v("#")]),t._v(" 4）语言相关伪类")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选择器")]),t._v(" "),_("th",[t._v("示例")]),t._v(" "),_("th",[t._v("示例说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v(":lang(language)")]),t._v(" "),_("td",[t._v("匹配设置了特定语言的元素")]),t._v(" "),_("td",[t._v('设置特定语言可以是：HTML元素设置lang=" "属性，meta元素设置charset=" "属性，或者是在 http头部上设置语言属性。实际上，lang=" " 属性不只可以在 html 标签上设置，也可以在其他的元素上设置。')])]),t._v(" "),_("tr",[_("td",[t._v(":dir")]),t._v(" "),_("td",[t._v("匹配指定阅读方向的元素。")]),t._v(" "),_("td",[t._v("当 HTML 元素中设置了 dir 属性时该伪类才能生效。现时支持的阅读方向有两种：ltr（从左往右）和 rtl（从右往左）。目前，只有火狐浏览器支持 :dir 伪类，并在火狐浏览器中使用时需要添加前缀( -moz-dir() )(试验阶段)。")])])])]),t._v(" "),_("h4",{attrs:{id:"_5-其他伪类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-其他伪类"}},[t._v("#")]),t._v(" 5）其他伪类")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选择器")]),t._v(" "),_("th",[t._v("示例")]),t._v(" "),_("th",[t._v("示例说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v(":root")]),t._v(" "),_("td",[t._v("匹配文档的根元素")]),t._v(" "),_("td",[t._v("一般的 html 文件的根元素是 html 元素。")])]),t._v(" "),_("tr",[_("td",[t._v(":fullscreen")]),t._v(" "),_("td",[t._v("匹配处于全屏模式下的元素")]),t._v(" "),_("td",[t._v("全屏模式不是通过按 F11 来打开的全屏模式，而是通过 Javascript 的 Fullscreen API 来打开的，不同的浏览器有不同的 Fullscreen API。目前，:fullscreen 需要添加前缀才能使用。")])])])]),t._v(" "),_("blockquote",[_("p",[t._v("！！注意，伪类的名称不区分大小写。")])]),t._v(" "),_("h3",{attrs:{id:"first-child-和-first-of-type-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#first-child-和-first-of-type-的区别"}},[t._v("#")]),t._v(" "),_("code",[t._v(":first-child")]),t._v(" 和 "),_("code",[t._v(":first-of-type")]),t._v(" 的区别")]),t._v(" "),_("p",[t._v("以下面这段代码为例，看看两者有什么区别：")]),t._v(" "),_("div",{staticClass:"language-html extra-class"},[_("pre",{pre:!0,attrs:{class:"language-html"}},[_("code",[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第一个子元素"),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h1")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第二个子元素"),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h1")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第三个子元素"),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("第四个子元素"),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token tag"}},[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),_("p",[_("code",[t._v(":first-child")]),t._v(" 选择器是 CSS2 中定义的选择器，从字面意思上来看也很好理解，就是第一个子元素。那么：")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("p:first-child")]),t._v("：匹配到的是 p 元素,因为 p 元素是 div 的第一个子元素；")]),t._v(" "),_("li",[_("code",[t._v("h1:first-child")]),t._v("：匹配不到任何元素，因为在这里 h1 是 div 的第二个子元素，而不是第一个；")]),t._v(" "),_("li",[_("code",[t._v("span:first-child")]),t._v("：匹配不到任何元素，因为在这里两个 span 元素都不是 div 的第一个子元素；")])]),t._v(" "),_("p",[t._v("而 "),_("code",[t._v(":first-of-type")]),t._v(" 是 CSS3 中定义的选择器。还是以上面的代码为例，那么：")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("p:first-of-type")]),t._v("：匹配到的是 p 元素，因为 p 是 div 的所有为 p 的子元素中的第一个，事实上这里也只有一个为 p 的子元素；")]),t._v(" "),_("li",[_("code",[t._v("h1:first-child")]),t._v("：匹配到的是 h1 元素，因为 h1 是 div 的所有为 h1 的子元素中的第一个，事实上这里也只有一个为 h1 的子元素；")]),t._v(" "),_("li",[_("code",[t._v("span:first-child")]),t._v("：匹配到的是第三个子元素 span 。这里 div 有两个为 span 的子元素，匹配到的是第一个。")])]),t._v(" "),_("p",[t._v("所以，通过以上两个例子可以得出结论：")]),t._v(" "),_("p",[_("code",[t._v(":first-child")]),t._v(" 匹配的是某父元素的第一个子元素，可以说是结构上的第一个子元素。\n"),_("code",[t._v(":first-of-type")]),t._v(" 匹配的是该类型的第一个，类型是指什么呢，就是冒号前面匹配到的东西，比如 "),_("code",[t._v("p:first-of-type")]),t._v("，就是指所有 "),_("code",[t._v("p")]),t._v(" 元素中的第一个。这里不再限制是第一个子元素了，只要是该类型元素的第一个就行了，当然这些元素的范围都是属于同一级的，也就是同辈的。")]),t._v(" "),_("p",[t._v("对于同样类型的选择器，比如 "),_("code",[t._v(":last-child")]),t._v("、"),_("code",[t._v(":last-of-type")]),t._v("、"),_("code",[t._v(":nth-child(n)")]),t._v("、"),_("code",[t._v(":nth-of-type(n)")]),t._v("，也可以这样去理解。")])])}),[],!1,null,null,null);v.default=s.exports}}]);