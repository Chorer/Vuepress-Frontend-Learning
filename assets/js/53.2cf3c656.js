(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{591:function(v,_,e){"use strict";e.r(_);var t=e(12),n=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[e("strong",[v._v('1）1 + "true"')])]),v._v(" "),e("p",[v._v("操作数中有字符串，所以这里的 "),e("code",[v._v("+")]),v._v(" 是拼接符号，结果是 "),e("code",[v._v("1true")])]),v._v(" "),e("p",[e("strong",[v._v("2）1 + true")])]),v._v(" "),e("p",[v._v("操作数中既没有需要拆箱的对象也没有字符串，所以这里的 "),e("code",[v._v("+")]),v._v(" 是加号，结果是 1+1=2")]),v._v(" "),e("p",[e("strong",[v._v("3）1 + undefined")])]),v._v(" "),e("p",[v._v("操作数中既没有需要拆箱的对象也没有字符串，所以这里的 "),e("code",[v._v("+")]),v._v(" 是加号，而 undefined 转化为数字是 NaN，所以结果是 1+NaN=NaN")]),v._v(" "),e("p",[e("strong",[v._v("4）1 + null")])]),v._v(" "),e("p",[v._v("操作数中既没有需要拆箱的对象也没有字符串，所以这里的 "),e("code",[v._v("+")]),v._v(" 是加号，而 null 转化为数字是 0，所以结果是 1+0=1")]),v._v(" "),e("p",[e("strong",[v._v('5）"2" > 10')])]),v._v(" "),e("p",[v._v("两边并非同时是字符串，也没有对象，所以直接把两个操作数转化为数字再比较。因为 2 小于 10，所以返回 false")]),v._v(" "),e("p",[e("strong",[v._v('6）"2" > "10"')])]),v._v(" "),e("p",[v._v("两边都是字符串，所以按位比较字符的 unicode，因为 2 的 unicode 大于 1 的 unicode，所以返回 true")]),v._v(" "),e("p",[e("strong",[v._v("7）[] == []")])]),v._v(" "),e("p",[v._v("两边都是对象，所以不会拆箱，而是比较两者是否是同一个对象，由于在内存中的位置不同，所以不是同一个对象，返回 false")]),v._v(" "),e("p",[e("strong",[v._v("8）[] == ![]")])]),v._v(" "),e("p",[v._v("[] 跟在 ! 后面，因此它会被转化为一个布尔值，虽然是空数组，但也是一个实际存在的实体，所以转化为 true，取反就是 false。此时的比较就变成了 [] == false，看下面")]),v._v(" "),e("p",[e("strong",[v._v("9）[] == false")])]),v._v(" "),e("p",[v._v('两边并非同时是对象，并非同时是字符串，所以会尽量转化为一个数字。false 转化为数字就是 0，[] 则需要先拆箱，调用 valueOf 之后还是返回自身，所以继续调用 toString，返回""，""转化为数字，就是 0。左右两边都是 0，返回 true。')]),v._v(" "),e("p",[e("strong",[v._v("10）{} == {}")])]),v._v(" "),e("p",[v._v("两边都是对象，所以不会拆箱，而是比较两者是否是同一个对象，由于在内存中的位置不同，所以不是同一个对象，返回 false")]),v._v(" "),e("p",[e("strong",[v._v("11）{} == !{}")])]),v._v(" "),e("p",[v._v("{} 跟在 ! 后面，因此它会被转化为一个布尔值，虽然是空对象，但也是一个实际存在的实体，所以转化为 true，取反就是 false。此时的比较就变成了 {} == false，看下面")]),v._v(" "),e("p",[e("strong",[v._v("12）{} == false")])]),v._v(" "),e("p",[v._v('两边并非同时是对象，并非同时是字符串，所以会尽量转化为一个数字。false 转化为数字就是 0，{} 则需要先拆箱，调用 valueOf 之后还是返回自身，所以继续调用 toString，返回"[object Object]"，它转化为数字，就是 NaN，不等于右边的 0，所以返回 true。')]),v._v(" "),e("p",[e("strong",[v._v("13）{} - 3")])]),v._v(" "),e("p",[v._v('在此时的上下文中，{} 必须是一个原始值，所以先拆箱。由于期望 {} 是一个数字，所以优先调用 valueOf，但是返回了自身，所以继续调用 toString，返回了 "[object Object]"，再转化为数字，得到 NaN，NaN-3 还是 NaN，所以最后返回了 NaN。')])])}),[],!1,null,null,null);_.default=n.exports}}]);