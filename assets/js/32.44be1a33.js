(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{570:function(t,s,a){"use strict";a.r(s);var e=a(12),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("实现 "),a("code",[t._v("Object.is")]),t._v(" ，要点就是理解它与 "),a("code",[t._v("===")]),t._v(" 的不同。大多数情况下，完全可以把 "),a("code",[t._v("Object")]),t._v(" 当作是 "),a("code",[t._v("===")]),t._v("，但区别在于，它不会错误地认为 "),a("code",[t._v("+0")]),t._v("、"),a("code",[t._v("-0")]),t._v("相等（仍认为 "),a("code",[t._v("+0")]),t._v(" 和 0 相等），也不会错误地认为 "),a("code",[t._v("NaN")]),t._v(" 和 "),a("code",[t._v("NaN")]),t._v(" 不相等。")]),t._v(" "),a("p",[t._v("参考 MDN 上 polyfill 实现的写法：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("myIs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("y  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v("y  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("如果 "),a("code",[t._v("x!==y")]),t._v("，那么只需要考查 x 和 y 都为 NaN 的情况。根据 NaN 的特点，如果 x 和 y 都为 NaN，那么 x 一定不等于自身，同时，y 也一定不等于自身，此时就返回 true；其它的情况，x 或者 y 都一定等于自身，就自然返回 false")]),t._v(" "),a("li",[t._v("如果 "),a("code",[t._v("x===y")]),t._v("，那么只需要考查 x 和 y 取值为 "),a("code",[t._v("+0")]),t._v("、"),a("code",[t._v("-0")]),t._v("、"),a("code",[t._v("0")]),t._v(" 的情况。在 x 和 y 有一个不为 0 和 ±0 的情况下，"),a("code",[t._v("x===y")]),t._v(" 意味着 x 和 y 确实是相等的，此时返回 true；在 x 和 y 取值都为 0 和 "),a("code",[t._v("±0")]),t._v(" 的情况下，再看看是不是一个 "),a("code",[t._v("+0")]),t._v("，一个 "),a("code",[t._v("-0")]),t._v("，因为 "),a("code",[t._v("1/+0 = + Infinity")]),t._v("，"),a("code",[t._v("1/-0 = -Infinity")]),t._v("，当 x 和 y 一个 "),a("code",[t._v("+0")]),t._v("，一个 "),a("code",[t._v("-0")]),t._v(" 的时候，"),a("code",[t._v("1/x")]),t._v(" 和 "),a("code",[t._v("1/y")]),t._v(" 是不相等的，此时返回 true")])])])}),[],!1,null,null,null);s.default=n.exports}}]);