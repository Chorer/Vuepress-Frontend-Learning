(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{553:function(t,E,r){"use strict";r.r(E);var s=r(12),a=Object(s.a)({},(function(){var t=this,E=t.$createElement,r=t._self._c||E;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"解释器和编译器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解释器和编译器"}},[t._v("#")]),t._v(" 解释器和编译器")]),t._v(" "),r("p",[t._v("机器无法理解我们编写的高级语言，因此要将高级语言“翻译为”机器可以理解的机器语言。根据语言类型的不同，可能需要用到编译器或者解释器。")]),t._v(" "),r("p",[t._v("编译型语言在程序执行之前，需要经过编译器的编译过程，并且编译之后会直接保留机器能读懂的⼆进制文件，这样每次运行程序时，都可以直接运行该⼆进制文件，而不需要再次重新编译了。比如 C/C++、GO 等都是编译型语⾔。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/18.jpg",alt:""}})]),t._v(" "),r("p",[t._v("而由解释型语言编写的程序，在每次运行时都需要通过解释器对程序进行"),r("strong",[t._v("动态解释和执行")]),t._v("。比如 Python、JavaScript 等都属于解释型语言。")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/19.jpg",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"v8-如何执行-js-代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#v8-如何执行-js-代码"}},[t._v("#")]),t._v(" V8 如何执行 JS 代码")]),t._v(" "),r("p",[t._v("以前 Chrome 的 V8 并没有使用解释器，源代码被转化为 AST 之后就被编译器编译成可执行的机器码。机器码的执行效率很高，但占用内存也很大（尤其是移动设备中），于是后来引入了解释器，在 AST 和机器码中间增加了字节码，并采用了 JIT 即时编译器进行优化。也就是说，JS 代码的执行同时使用了解释器和编译器。")]),t._v(" "),r("p",[t._v("具体过程如下图所示：")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://myblog-1258623898.cos.ap-chengdu.myqcloud.com/%E6%B5%8F%E8%A7%88%E5%99%A8%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0/20.jpg",alt:""}})]),t._v(" "),r("ul",[r("li",[t._v("解析器（Parser）对输入的源代码进行词法分析和语法分析，生成 AST")]),t._v(" "),r("li",[t._v("解释器（Interpreter）Ignition 对 AST 进行处理，转化成字节码，字节码逐行解释并执行")]),t._v(" "),r("li",[t._v("监测器（Profiler）进行观察，找出可以进行优化的代码（通常是重复执行的热点代码）")]),t._v(" "),r("li",[t._v("编译器（Compiler）TurboFan 对热点代码进行处理，转化成机器码。下次再执行相同代码的时候会直接执行更加高效的机器码，而不是去解释执行字节码，这样就提高了代码的执行效率。")])])])}),[],!1,null,null,null);E.default=a.exports}}]);